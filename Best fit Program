#include <iostream>
using namespace std;

int main() {
    int blocks[10], processes[10], blockCount, processCount;
    int used[10] = {0}; // Marks if a block is used

    // Input memory blocks
    cout << "Enter number of memory blocks: ";
    cin >> blockCount;
    cout << "Enter size of each block:\n";
    for (int i = 0; i < blockCount; i++) {
        cout << "Block " << i + 1 << ": ";
        cin >> blocks[i];
    }

    // Input processes
    cout << "\nEnter number of processes: ";
    cin >> processCount;
    cout << "Enter size of each process:\n";
    for (int i = 0; i < processCount; i++) {
        cout << "Process " << i + 1 << ": ";
        cin >> processes[i];
    }

    // Best Fit Allocation
    cout << "\nProcess\tSize\tBlock Allocated\n";
    for (int i = 0; i < processCount; i++) {
        int bestIdx = -1;

        for (int j = 0; j < blockCount; j++) {
            if (!used[j] && blocks[j] >= processes[i]) {
                if (bestIdx == -1 || blocks[j] < blocks[bestIdx]) {
                    bestIdx = j;
                }
            }
        }

        if (bestIdx != -1) {
            used[bestIdx] = 1;
            cout << "P" << i + 1 << "\t" << processes[i] << "\tBlock " << bestIdx + 1 << "\n";
        } else {
            cout << "P" << i + 1 << "\t" << processes[i] << "\tNot Allocated\n";
        }
    }

    return 0;
}




Output:
Enter number of memory blocks: 3
Block 1: 200
Block 2: 100
Block 3: 300

Enter number of processes: 2
Process 1: 110
Process 2: 250

Process Size  Block Allocated
P1     110    Block 1
P2     250    Block 3
