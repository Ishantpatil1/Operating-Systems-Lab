#include <iostream>
using namespace std;

int main() {
    int blocks[10], processes[10];
    int used[10] = {0}; // 0 = block is free
    int blockCount, processCount;

    // Input memory blocks
    cout << "Enter number of memory blocks: ";
    cin >> blockCount;
    cout << "Enter size of each block:\n";
    for (int i = 0; i < blockCount; i++) {
        cout << "Block " << i + 1 << ": ";
        cin >> blocks[i];
    }

    // Input processes
    cout << "\nEnter number of processes: ";
    cin >> processCount;
    cout << "Enter size of each process:\n";
    for (int i = 0; i < processCount; i++) {
        cout << "Process " << i + 1 << ": ";
        cin >> processes[i];
    }

    // Worst Fit Allocation
    cout << "\nProcess\tSize\tBlock Allocated\n";
    for (int i = 0; i < processCount; i++) {
        int worstIdx = -1;

        for (int j = 0; j < blockCount; j++) {
            if (!used[j] && blocks[j] >= processes[i]) {
                if (worstIdx == -1 || blocks[j] > blocks[worstIdx]) {
                    worstIdx = j;
                }
            }
        }

        if (worstIdx != -1) {
            used[worstIdx] = 1;
            cout << "P" << i + 1 << "\t" << processes[i] << "\tBlock " << worstIdx + 1 << "\n";
        } else {
            cout << "P" << i + 1 << "\t" << processes[i] << "\tNot Allocated\n";
        }
    }

    return 0;
}





Output:
Enter number of memory blocks: 3
Block 1: 100
Block 2: 300
Block 3: 200

Enter number of processes: 2
Process 1: 120
Process 2: 90


Process Size Block Allocated
P1     120   Block 2
P2     90    Block 3

